;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-emacs-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(dired-shell-command-history swiper-history bookmark-history counsel-set-variable-history counsel-org-link-history org-roam-node-history counsel-M-x-history ivy-history read-number-history coding-system-history face-name-history read-expression-history org-read-date-history org-tags-history read-char-history grep-files-history grep-regexp-history minibuffer-history-search-history query-replace-history minibuffer-history yes-or-no-p-history buffer-name-history extended-command-history file-name-history))
(setq dired-shell-command-history '("d"))
(setq swiper-history '("SoSu" #("SoSu" 0 4 (ivy-index 0))))
(setq bookmark-history '("dot.emacs.d" "org        " "dot.emacs.d" "home       " "dot.emacs.d" "org        " "home       " "dot.emacs.d" "org        " "dot.emacs.d"))
(setq counsel-org-link-history '("?" "https://algon.dk/_doc/sent.pdf"))
(setq org-roam-node-history '("ADHD"))
(setq counsel-M-x-history '(#("^eval" 0 5 (ivy-index 2)) "eval-buffer" #("^replace-s" 0 10 (ivy-index 0)) "replace-string" #("^rep" 0 4 (ivy-index 8)) "replace-string" #("^replace-string" 0 15 (ivy-index 0)) "replace-string" #("^list-p" 0 7 (ivy-index 1)) "list-packages" #("^customize" 0 10 (ivy-index 3)) "customize" #("^straight-g" 0 11 (ivy-index 0)) "straight-get-recipe" #("^org-roam" 0 9 (ivy-index 2)) "org-roam-ui-open" #("jou" 0 3 (ivy-index 4)) "org-journal-new-entry" #("^rgrep" 0 6 (ivy-index 0)) "rgrep" #("link" 0 4 (ivy-index 1)) "counsel-org-link" "counsel-org-link" "org-roam-capture" "org-roam-ui-open" #("journal" 0 7 (ivy-index 14)) "org-journal-new-date-entry" #("^" 0 1 (ivy-index 11)) "fortune-add-fortune" "magit-version"))
(setq ivy-history '("calle24" "*Messages*" "calc" "emacs-lisp" "org<niels>" "emacs" "nerd-icons-compl.el" "*Messages*" "*scratch*" "*Messages*"))
(setq read-number-history '("80"))
(setq coding-system-history '("raw-text"))
(setq face-name-history '("diary"))
(setq read-expression-history '("wq"))
(setq org-read-date-history '("2025-05-09 09:00-11:00    " "2025-05-05 10:20-11:20    " "2025-05-13    " "2025-05-01 19:00-21:00    " "2025-04-29 12:30-15:00    " "2025-04-24    " "   " "2025-04-24    " "   " "2025-04-20    "))
(setq org-tags-history '("ældresagen" "privat" "Privat" "seniorråd" "privat" "ældresagen" "HUSK"))
(setq read-char-history '("yes"))
(setq grep-files-history '("all" "*.el" "all" "*.el" "all" "*.el" "all" "*.el"))
(setq grep-regexp-history '("SoSu" "posframe-pos" "org-latex" "org-laatex" "org-latex" "latex-extra-mode" "auto-package" "backup" "tooltips" "posframe-border" "unspec" "unspeci" "unspecified" ":color unspe" "simple-httpd" "childframe-w" "defhydra" "crux"))
(setq query-replace-history '("*" "*#" "*" "##" "" "**" "" "\"" "" "\"" "setopt " "setq"))
(setq minibuffer-history '("src" "emacs-lisp" "?" "counsel" "algon-ns" "config/programming/lsp.el" "flycheck" "niels (dokumenter)" "Niels" "NS" "elbank" "algon.dk" "eglot" "NSdata" "projekt" "Dokumenter" "home" "org" "dirty" "general" "ns.emacs.d" "dot.emacs.d"))
(setq yes-or-no-p-history '("yes"))
(setq buffer-name-history '("magit-diff: nec.emacs.d" "*Messages*" "keybindings.el" "*Messages*" "ns.emacs.d" "*Messages*" ".gitignore" "etc" "*Messages*" "init.el" "*Messages*" "Dankort-3338012772-20250422.csv" "*scratch*" "*Messages*" "*Customize Face: Diary*" "*Messages*" "registers.el" "*Messages*" "countw.el" "wiegley.emacs.d" "*Messages*" "~" "lisp" "*Messages*" "init-latex.el" "*Messages*" "sh-mode" "*Messages*" "config" "*Messages*" "*scratch*" "hooks.el" "crux-load.el" "hooks.el" "init.el" "*Messages*" "config" "*Messages*" "ns.emacs.d" "org<2>" "*Messages*" "keybindings.el" "*Messages*"))
(setq extended-command-history '("straight-get-recipe" "rgrep" "straight-get-recipe" "list-packages" "prettify-symbols-mode" "prettier-prettify" "magit-push" "magit-status" "magit-version" "package-list-packages" "straight-get-recipe" "list-packages" "magit-section-show" "bank-buddy-cat-mode" "bank-buddy-cat-add-pattern" "bank-buddy-generate-report" "bank-buddy-cat-mode" "bank-buddy-generate-report" "replace-string" "bank-buddy-generate-report" "replace-string" "bank-buddy-generate-report" "straight-get-recipe" "package-list-packages" "xwidget-webkit-browse-url" "uuid-insert" "eval-buffer" "uuid-insert" "eval-buffer" "version" "editorconfig-version" "customize-face" "magit-section-up" "straight-get-recipe" "ibuffer" "hydra-ibuffer-main/body" "rgrep" "bookmark-set" "rgrep" "straight-fetch-all" "straight-rebuild-all" "straight-check-all" "straight-pull-all" "rgrep" "straight-get-recipe" "list-packages" "dashboard-open" "bookmark-set" "dashboard-open" "replace-string" "dashboard-mode" "emacs-version"))
(setq file-name-history '("/Users/niels/.emacs.d/config/tools/" "/Users/niels/.emacs.d/config/ui/" "/Users/niels/.emacs.d/config/core/" "/Users/niels/org/niels/MobiltBredbaand.org" "/Users/niels/org/niels/" "/Users/niels/org/niels/5G-mobilt" "/Users/niels/org/niels/" "/Users/niels/.emacs.d/" "/Users/niels/.emacs.d/config/core/" "/Users/niels/.emacs.d/" "/Users/niels/.emacs.d/emojis/emojione-v2.2.6-22/" "/Users/niels/.emacs.d/images/" "/Users/niels/.emacs.d/" "/Users/niels/.config/brihad.emacs.d/lisp/vertico-extensions/" "/Users/niels/.emacs.d/lisp/" "/Users/niels/.emacs.d/.git/" "/Users/niels/.emacs.d/.git/refs/heads/" "/Users/niels/.emacs.d/.git/objects/" "/Users/niels/.emacs.d/.git/logs/refs/remotes/origin/" "/Users/niels/.emacs.d/.git/logs/refs/heads/" "/Users/niels/.emacs.d/.git/info/" "/Users/niels/.emacs.d/" "/Users/niels/.emacs.d/config/org/" "/Users/niels/org/journal/" "/Users/niels/org/agenda/" "/Users/niels/org/niels/priser1950-2025.org" "/Users/niels/org/emacs/" "/Users/niels/.emacs.d/" "/Users/niels/.emacs.d/config/org/" "/Users/niels/.emacs.d/config/" "/Users/niels/.config/ns.emacs.d/lisp/" "/Users/niels/Documents/ÆldreSagen/Brugervejledninger/" "/Users/niels/" "/Users/niels/.emacs.d/" "~/.emacs.d/" "/Users/niels/.emacs.d/config/" "/Users/niels/.emacs.d/config/completion/" "/Users/niels/.emacs.d/config/completion/nerd-icons-compl.el" "/Users/niels/org/emacs/auto/org-tutorial.org" "/Users/niels/Data/dot.config/karthink.emacs.d/lisp/" "/Users/niels/Data/dot.config/ethan.emacs.d/lisp/" "/Users/niels/Data/dot.config/DarwinAward.emacs.d/" "/Users/niels/Data/dot.config/clover.emacs.d/doc/" "/Users/niels/Data/dot.config/clover.emacs.d/img/" "/Users/niels/Data/dot.config/clover.emacs.d/lisp/lang/" "/Users/niels/Data/dot.config/clover.emacs.d/lisp/" "/Users/niels/Data/dot.config/aculich.emacs.d/lisp/" "/Users/niels/Data/dot.config/aculich.emacs.d/etc/" "/Users/niels/" "/Users/niels/.emacs.d/config/completion/" "/Users/niels/.emacs.d/" "/Users/niels/.emacs.d/config/completion/" "~/.emacs.d/config/core/ivy-counsel.el" "~/.emacs.d/config/ui/" "~/.config/ns.emacs.d/lisp/" "~/.config/nec.emacs.d/lisp/" "~/.emacs.d/" "~/" "~/.emacs.d/config/core/" "~/.emacs.d/" "~/.emacs.d/config/write/" "~/.emacs.d/" "~/.emacs.d/config/" "~/.emacs.d/core/write" "~/.emacs.d/config/write/" "~/.emacs.d/" "~/" "~/.emacs.d/" "~/projekt/emacs/lisp/" "~/.emacs.d/" "~/projekt/emacs/lisp/org/" "~/.emacs.d/config/write/export-org.el" "~/.emacs.d/config/write/" "~/projekt/emacs/lisp/org/" "~/.emacs.d/config/write/" "~/.emacs.d/config/org/" "~/projekt/emacs/lisp/org/" "~/.emacs.d/" "~/.config/nec2024.emacs.d/lisp/" "~/.emacs.d/config/core/" "~/.config/nec20240725.emacs.d/lisp/" "~/.emacs.d/config/org/" "org/org-table.el" "~/.emacs.d/config/" "~/.config/nec2024.emacs.d/lisp/init-org-table.el" "~/.emacs.d/config/org/" "~/.config/nec2024.emacs.d/lisp/init-org-table.el" "~/.emacs.d/config/org/" "~/.config/nec2024.emacs.d/lisp/" "~/.emacs.d/config/org/" "~/.config/nec2024.emacs.d/lisp/" "~/" "~/.emacs.d/config/core/" "~/.config/ns.emacs.d/lisp/" "~/.emacs.d/config/core/" "~/.emacs.d/" "~/.config/ns.emacs.d/lisp/" "~/.config/ns.emacs.d/" "~/org/niels/" "~/org/niels/secret/"))
(setq tablist-named-filter 'nil)
(setq projectile-project-command-history '#s(hash-table test equal))
